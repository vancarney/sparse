// Generated by CoffeeScript 1.10.0
var SparseDemo, global,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

global = typeof exports !== "undefined" && exports !== null ? exports : window;

if (!global.SparseDemo) {
  SparseDemo = global.SparseDemo = {};
}

(function($) {
  'use strict';
  return SparseDemo.IndexView = (function(superClass) {
    extend(IndexView, superClass);

    function IndexView() {
      return IndexView.__super__.constructor.apply(this, arguments);
    }

    IndexView.prototype.collection = new sparse.Batch;

    IndexView.prototype.init = function(o) {
      return this.collection.on('reset add remove', (function(_this) {
        return function() {
          return _this.$el.find('#demo_reset').attr('disabled', _this.collection.length < 1);
        };
      })(this));
    };

    IndexView.prototype.events = {
      'click #demo_reset': function(evt) {
        _.each(this.__children, (function(_this) {
          return function(v, k) {
            if (typeof v.reset === 'function') {
              return v.reset();
            }
          };
        })(this));
        $('body').mask('');
        setTimeout(((function(_this) {
          return function() {
            $('body').unmask();
            return _this.$el.find('#demo_reset').attr('disabled', _this.collection.length < 1);
          };
        })(this)), 8000);
        return this.collection.exec({
          complete: (function(_this) {
            return function(m, r, o) {
              $('body').unmask();
              return _this.$el.find('#demo_reset').attr('disabled', _this.collection.length < 1);
            };
          })(this),
          error: (function(_this) {
            return function(m, r, o) {
              return $('body').unmask();
            };
          })(this)
        });
      }
    };

    IndexView.prototype.childrenComplete = function() {
      _.each(this.__children, (function(_this) {
        return function(v, k) {
          v.on('loadingStart', function() {
            return $('body').mask('');
          });
          return v.on('loadingStop', function() {
            return $('body').unmask();
          });
        };
      })(this));
      return this['#batch'].on('defaultDataLoaded', (function(_this) {
        return function(evt) {
          return _this['#collections'].loadCollection();
        };
      })(this));
    };

    IndexView.prototype.subviews = {
      '#models': SparseDemo.ModelView,
      '#users': SparseDemo.UserView,
      '#collections': SparseDemo.CollectionView,
      '#batch': SparseDemo.BatchView
    };

    return IndexView;

  })(SparseDemo.BaseView);
})(jQuery);
